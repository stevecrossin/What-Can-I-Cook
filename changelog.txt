Changelog:

Milestone 1 (Week 3 progress - Steve Crossin) - almost complete, however UI still being worked on

Saturday 17 March
* Ingredients, Intolerances, Logs, Pantry, Recipes and Users java classes have been created with core methods and instructions
on how to implement in pseudocode.
* Ingredients.csv has been populated, completed and formatted as per database table requirement.

Sunday 18 March
* Intolerances.csv has been created, completed and formatted per database table requirements - gluten filter needs to be confirmed to ensure filter not too restrictive
* SplitExample.java has been sourced to determine and test how to split strings from csv files
* All core java files have been created but not populated with pseudocode or actual code except as noted on Sat 17 entry
* Colour scheme for application has been implemented, action bar has been disabled for main view
* Room database code and data objects code has begun to be written but is not yet functional

End of Sunday 18 March:

* Room databsse implementation still not functional
* Core layouts that have been created: splash screen tested and functional, main activity functioning with layouts working correctly and dynamically adjusting to different screen sizes, pantry view working correctly. The start of an intolerance view,
and saved recipes view has been created.

* Passing of dish type to ingredients picker screen coded, tested and verified working
* Manifest file updated, all core XML files have been created

Changes made as of 21 March - milestone 1 complete

* All core UI is complete including dietary intolerances
* Initial code to enable login screen to function working

Sunday 24 March - Monday 25 March
* Reading from ingredients.csv and extract unique categories and display to the recycle view. 
This is done dynamically so whenever there're new ingredient we don't have to manually add to the list.
Sub task:
+ Sucessfully read the ingredient csv file with Apache commons library.
+ Successfully parse the data into the Ingredient object
+ Created recycleview and view holder in layout
+ Created ViewAdapter and View holder for Categories
+ Implement simple room database: DAO, entity & database core has been implemented. From now on this model can be used with other type of data
+ create Ingredient entity class
+ try to insert to database using information in the csv file.
+ Logic check if there's data existed in the DB, if not, insert. Next time the app loads, it will first check if there's data already in DB before inserting ingredient.
+ Load unique categories into the recycleview.

Monday 25 March
+ Further display each ingredient in each category (dynamically)
+ Create recyleview, view holder and database query methods for displaying incredient
+ Create new layout and new activity
+ Passing category between intents.